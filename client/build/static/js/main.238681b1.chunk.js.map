{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","components/Posts/Post/styles.js","api/index.js","actions/posts.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","img/thoughts.png","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","combineReducers","posts","action","type","payload","map","post","_id","filter","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","createPost","dispatch","a","newPost","data","console","log","api","Post","setCurrentId","classes","useStyles","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","author","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","component","tags","tag","gutterButtom","CardContent","message","CardActions","FontSize","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","handleSubmit","e","preventDefault","clear","Paper","autoComplete","noValidate","onSubmit","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","marginLeft","App","get","Container","maxwidth","AppBar","align","src","thoughts","alt","Grow","in","justify","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"0LAAaA,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAY,YACZC,EAAO,OCDLC,cAAgB,CAAEC,MCDlB,WAAyB,IAAxBA,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAOA,EAAOC,MACb,KAAKL,EACJ,OAAOI,EAAOE,QACf,KAAKT,EACJ,MAAM,GAAN,mBAAWM,GAAX,CAAkBC,EAAOE,UAC1B,KAAKR,EACL,KAAKG,EACJ,OAAOE,EAAMI,KAAI,SAACC,GAAD,OAAWA,EAAKC,MAAQL,EAAOE,QAAQG,IAAML,EAAOE,QAAUE,KAChF,KAAKT,EACJ,OAAOI,EAAMO,QAAO,SAACF,GAAD,OAAUA,EAAKC,MAAQL,EAAOE,WACnD,QACC,OAAOH,M,wLCZKQ,cAAW,CACxBC,MAAO,CACLC,OAAQ,EACRC,WAAY,SACZC,gBAAiB,qBACjBC,oBAAqB,UAEvBC,OAAQ,CACNA,OAAQ,SAEVC,eAAgB,CACdL,OAAQ,QAEVM,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBAChBC,aAAc,OACdV,OAAQ,OACRW,SAAU,YAEZC,QAAS,CACPD,SAAU,WACVE,IAAK,OACLC,KAAM,OACNC,MAAO,SAETC,SAAU,CACRL,SAAU,WACVE,IAAK,OACLI,MAAO,OACPF,MAAO,SAETG,KAAM,CACJX,QAAS,QAEXY,QAAS,CACPZ,QAAS,OACTE,eAAgB,gBAChBW,OAAQ,QAEVC,MAAO,CACLC,QAAS,UAEXC,YAAa,CACXD,QAAS,kBACTf,QAAS,OACTE,eAAgB,mB,0CC/Cde,EAAG,+CAMIC,EAAa,SAACC,EAAIC,GAAL,OAAqBC,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMC,IAE9DG,EAAa,SAAbA,EAAcJ,GAAD,OAAQE,IAAMG,OAAN,UAAgBP,EAAhB,YAAuBE,GAAMI,IAElDE,EAAW,SAAXA,EAAYN,GAAD,OAAQE,IAAMC,MAAN,UAAeL,EAAf,YAAsBE,GAAMM,ICC/CC,EAAa,SAACtC,GAAD,8CAAU,WAAOuC,GAAP,iBAAAC,EAAA,+EDPTC,ECSazC,EDTDiC,IAAMjC,KAAK6B,EAAKY,GCOnB,gBAE1BC,EAF0B,EAE1BA,KACRH,EAAS,CAAE1C,KAAMR,EAAQS,QAAS4C,IAHA,gDAKlCC,QAAQC,IAAR,MALkC,kCDPV,IAACH,ICOS,oBAAV,uDASbX,EAAa,SAACC,EAAI/B,GAAL,8CAAc,WAAOuC,GAAP,iBAAAC,EAAA,+EAEfK,EAAed,EAAI/B,GAFJ,gBAE9B0C,EAF8B,EAE9BA,KACRC,QAAQC,IAAIF,GACZH,EAAS,CAAE1C,KAAMP,EAAQQ,QAAS4C,IAJI,gDAMtCC,QAAQC,IAAR,MANsC,yDAAd,uD,OC6BXE,EAxCF,SAAC,GAA4B,IAA1B9C,EAAyB,EAAzBA,KAAM+C,EAAmB,EAAnBA,aACfC,EAAUC,IACVV,EAAWW,cACjB,OACC,eAACC,EAAA,EAAD,CAAMC,UAAWJ,EAAQrC,KAAzB,UACC,cAAC0C,EAAA,EAAD,CAAWD,UAAWJ,EAAQ5C,MAAOkD,MAAOtD,EAAKuD,aAAc7B,MAAO1B,EAAK0B,QAC3E,sBAAK0B,UAAWJ,EAAQ/B,QAAxB,UACC,cAACuC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BzD,EAAK0D,SAC/B,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BE,IAAO3D,EAAK4D,WAAWC,eAErD,qBAAKT,UAAWJ,EAAQ3B,SAAxB,SACC,cAACyC,EAAA,EAAD,CACCC,MAAO,CAAC3C,MAAO,SACf4C,KAAK,QACLC,QAAS,kBAAMlB,EAAa/C,EAAKC,MAHlC,SAIC,cAAC,IAAD,CAAeiE,SAAS,gBAG1B,qBAAKd,UAAWJ,EAAQxB,QAAxB,SACC,cAACgC,EAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,gBAAgB+C,UAAU,KAA5D,SAAkEnE,EAAKoE,KAAKrE,KAAI,SAACsE,GAAD,iBAAaA,EAAb,YAEjF,cAACb,EAAA,EAAD,CAAYJ,UAAWJ,EAAQtB,MAAO4C,cAAY,EAACb,QAAQ,KAAKU,UAAU,KAA1E,SAAgFnE,EAAK0B,QACrF,cAAC6C,EAAA,EAAD,UACC,cAACf,EAAA,EAAD,CAAac,cAAY,EAACb,QAAQ,QAAQrC,MAAM,gBAAgB+C,UAAU,IAA1E,SAA+EnE,EAAKwE,YAErF,eAACC,EAAA,EAAD,WACC,eAACX,EAAA,EAAD,CAAQE,KAAK,QAAQ5C,MAAM,UAAU6C,QAAS,WDK1B,IAAClC,ECLgCQ,GDKhCR,ECLkD/B,EAAKC,IDKxD,uCAAQ,WAAOsC,GAAP,iBAAAC,EAAA,+EAEPK,EAAad,GAFN,gBAEtBW,EAFsB,EAEtBA,KACRH,EAAS,CAAE1C,KAAMJ,EAAMK,QAAS4C,IAHF,gDAK9BC,QAAQC,IAAR,MAL8B,yDAAR,yDCLpB,UACC,cAAC,IAAD,CAAgB8B,SAAS,UAD1B,iBAGE1E,EAAK2E,aAEP,eAACb,EAAA,EAAD,CAAQE,KAAK,QAAQ5C,MAAM,UAAU6C,QAAS,WDVxB,IAAClC,ECU8BQ,GDV9BR,ECUkD/B,EAAKC,IDVxD,uCAAQ,WAAOsC,GAAP,SAAAC,EAAA,+EAE1BK,EAAed,GAFW,OAGhCQ,EAAS,CAAE1C,KAAMN,EAAQO,QAASiC,IAHF,+CAMhCY,QAAQC,IAAR,MANgC,wDAAR,yDCUtB,UACC,cAAC,IAAD,CAAY8B,SAAS,UADtB,mBCxCWvE,eAAW,SAACyE,GAAD,MAAY,CACpCC,cAAe,CACbjE,QAAS,OACTkE,WAAY,UAEdC,SAAU,CACRtD,OAAQmD,EAAMI,QAAQ,IAExBC,UAAW,CACTC,UAAW,cCcAC,EAnBD,SAAC,GAAsB,IAApBpC,EAAmB,EAAnBA,aACVpD,EAAQyF,aAAY,SAACC,GAAD,OAAWA,EAAM1F,SACrCqD,EAAUC,IAIhB,OAFAN,QAAQC,IAAIjD,GAGVA,EAAM2F,OACN,cAACC,EAAA,EAAD,CAAMnC,UAAWJ,EAAQwC,UAAWA,WAAS,EAACV,WAAW,UAAUE,QAAS,EAA5E,SACErF,EAAMI,KAAI,SAACC,GAAD,OACT,cAACuF,EAAA,EAAD,CAAqBE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA7C,SACC,cAAC,EAAD,CAAM5F,KAAMA,EAAM+C,aAAcA,KADtB/C,EAAKC,UAHJ,cAAC4F,EAAA,EAAD,K,+CCXH1F,gBAAW,SAACyE,GAAD,MAAY,CACpCkB,KAAM,CACJ,uBAAwB,CACtBrE,OAAQmD,EAAMI,QAAQ,KAG1Be,MAAO,CACLpE,QAASiD,EAAMI,QAAQ,IAEzBgB,KAAM,CACJpF,QAAS,OACTqF,SAAU,OACVnF,eAAgB,UAElBoF,UAAW,CACTC,MAAO,MACP1E,OAAQ,UAEV2E,aAAc,CACZC,aAAc,QCqCHC,GAlDF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWxD,EAAmB,EAAnBA,aAC1B,EAAgCyD,mBAAS,CACxC9C,OAAQ,GACRhC,MAAO,GACP8C,QAAS,GACTJ,KAAM,GACNb,aAAc,KALf,mBAAOkD,EAAP,KAAiBC,EAAjB,KAOM1G,EAAOoF,aAAY,SAACC,GAAD,OAAYkB,EAAYlB,EAAM1F,MAAMgH,MAAK,SAACnC,GAAD,OAAaA,EAAQvE,MAAQsG,KAAa,QACtGvD,EAAUC,KACVV,EAAWW,cAEjB0D,qBAAU,WACN5G,GAAM0G,EAAY1G,KACnB,CAACA,IAEJ,IAAM6G,EAAY,uCAAG,WAAOC,GAAP,SAAAtE,EAAA,sDACpBsE,EAAEC,iBAGDxE,EADEgE,EACOzE,EAAWyE,EAAWE,GAEtBnE,EAAWmE,IAGrBO,IAToB,2CAAH,sDAaZA,EAAQ,WACbjE,EAAa,MACb2D,EAAY,CAAEhD,OAAQ,GAAIhC,MAAO,GAAI8C,QAAS,GAAIJ,KAAM,GAAIb,aAAc,MAG3E,OACG,cAAC0D,GAAA,EAAD,CAAO7D,UAAWJ,EAAQ+C,MAA1B,SACE,uBAAMmB,aAAa,MAAMC,YAAU,EAAC/D,UAAS,UAAKJ,EAAQ8C,KAAb,YAAqB9C,EAAQgD,MAAQoB,SAAUP,EAA5F,UACE,eAACrD,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0B8C,EAAY,OAAS,WAA/C,mBACA,cAACc,GAAA,EAAD,CAAWC,KAAK,SAAS7D,QAAQ,WAAW8D,MAAM,SAASC,WAAS,EAACC,MAAOhB,EAAS/C,OAAQgE,SAAU,SAACZ,GAAD,OAAOJ,EAAY,2BAAKD,GAAN,IAAgB/C,OAAQoD,EAAEa,OAAOF,YAC1J,cAACJ,GAAA,EAAD,CAAWC,KAAK,QAAQ7D,QAAQ,WAAW8D,MAAM,QAAQC,WAAS,EAACC,MAAOhB,EAAS/E,MAAOgG,SAAU,SAACZ,GAAD,OAAOJ,EAAY,2BAAKD,GAAN,IAAgB/E,MAAOoF,EAAEa,OAAOF,YACtJ,cAACJ,GAAA,EAAD,CAAWC,KAAK,UAAU7D,QAAQ,WAAW8D,MAAM,UAAUC,WAAS,EAACI,WAAS,EAACC,KAAM,EAAGJ,MAAOhB,EAASjC,QAASkD,SAAU,SAACZ,GAAD,OAAOJ,EAAY,2BAAKD,GAAN,IAAgBjC,QAASsC,EAAEa,OAAOF,YACjL,cAACJ,GAAA,EAAD,CAAWC,KAAK,OAAO7D,QAAQ,WAAW8D,MAAM,yBAAyBC,WAAS,EAACC,MAAOhB,EAASrC,KAAMsD,SAAU,SAACZ,GAAD,OAAOJ,EAAY,2BAAKD,GAAN,IAAgBrC,KAAM0C,EAAEa,OAAOF,MAAMK,MAAM,WAChL,qBAAK1E,UAAWJ,EAAQkD,UAAxB,SAAmC,cAAC,KAAD,CAAUrG,KAAK,OAAOkI,UAAU,EAAOC,OAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBvB,EAAY,2BAAKD,GAAN,IAAgBlD,aAAc0E,UAC3I,cAACnE,EAAA,EAAD,CAAQV,UAAWJ,EAAQoD,aAAc3C,QAAQ,YAAYrC,MAAM,UAAU4C,KAAK,QAAQnE,KAAK,SAAS2H,WAAS,EAAjH,oBACA,cAAC1D,EAAA,EAAD,CAAQL,QAAQ,YAAYrC,MAAM,YAAY4C,KAAK,QAAQC,QAAS+C,EAAOQ,WAAS,EAApF,yBCpDO,OAA0B,qCCE1BrH,gBAAW,iBAAO,CAC/B+H,OAAQ,CACNnH,aAAc,GACdU,OAAQ,SACRb,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBgE,WAAY,UAEdqD,QAAS,CACP/G,MAAO,sBAETkC,MAAO,CACL8E,WAAY,YC8BDC,GAnCH,WACX,MAAkC7B,mBAAS,MAA3C,mBAAOD,EAAP,KAAkBxD,EAAlB,KACMC,EAAUC,KACVV,EAAWW,cAMjB,OAJA0D,qBAAU,WACTrE,ERZsB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,+EDAEP,IAAMqG,IAAIzG,GCAZ,gBAEpBa,EAFoB,EAEpBA,KACRH,EAAS,CAAE1C,KAAML,EAAWM,QAAS4C,IAHT,gDAK5BC,QAAQC,IAAR,MAL4B,yDAAN,yDQapB,CAAC2D,EAAWhE,IAGd,eAACgG,EAAA,EAAD,CAAWC,SAAS,KAApB,UACC,eAACC,EAAA,EAAD,CAAQrF,UAAWJ,EAAQkF,OAAQlH,SAAS,SAASI,MAAM,UAA3D,UACC,cAACoC,EAAA,EAAD,CAAYC,QAAQ,KAAKiF,MAAM,SAA/B,sBACA,qBAAKtF,UAAWJ,EAAQM,MAAOqF,IAAOC,GAAUC,IAAI,WAAWxI,OAAO,UAGvE,cAACyI,EAAA,EAAD,CAAMC,IAAE,EAAR,SACC,cAACR,EAAA,EAAD,UACC,eAAChD,EAAA,EAAD,CAAMC,WAAS,EAACwD,QAAQ,gBAAgBlE,WAAW,UAAUE,QAAS,EAAtE,UACC,cAACO,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAAC,EAAD,CAAO5C,aAAcA,MAGtB,cAACwC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAAC,GAAD,CAAMY,UAAWA,EAAWxD,aAAcA,iBCvB3CkG,I,OAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,QAE5DC,IAASC,OACR,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACC,cAAC,GAAD,MAEDQ,SAASC,eAAe,W","file":"static/js/main.238681b1.chunk.js","sourcesContent":["export const CREATE = 'CREATE'\r\nexport const UPDATE = 'UPDATE'\r\nexport const DELETE = 'DELETE'\r\nexport const FETCH_ALL = 'FETCH_ALL'\r\nexport const LIKE = 'LIKE'","import { combineReducers } from 'redux'\r\nimport posts from './posts'\r\n\r\nexport default combineReducers({ posts })\r\n","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n\tswitch(action.type) {\r\n\t\tcase FETCH_ALL:\r\n\t\t\treturn action.payload\r\n\t\tcase CREATE:\r\n\t\t\treturn [...posts, action.payload]\r\n\t\tcase UPDATE:\r\n\t\tcase LIKE:\r\n\t\t\treturn posts.map((post) => (post._id === action.payload._id ? action.payload : post))\r\n\t\tcase DELETE:\r\n\t\t\treturn posts.filter((post) => post._id !== action.payload)\r\n\t\tdefault:\r\n\t\t\treturn posts\r\n\t}\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import axios from 'axios'\r\n\r\nconst url = `https://project-thoughts.herokuapp.com/posts`\r\n\r\nexport const fetchPosts = () => axios.get(url)\r\n\r\nexport const createPost = (newPost) => axios.post(url, newPost)\r\n\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost)\r\n\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`, deletePost)\r\n\r\nexport const likePost = (id) => axios.patch(`${url}/${id}`, likePost)","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes.js';\r\n\r\nimport * as api from '../api/index.js'\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.fetchPosts() \r\n\t\tdispatch({ type: FETCH_ALL, payload: data })\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.createPost(post)\r\n\t\tdispatch({ type: CREATE, payload: data })\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.updatePost(id, post)\r\n\t\tconsole.log(data)\r\n\t\tdispatch({ type: UPDATE, payload: data })\r\n\t} catch(error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tawait api.deletePost(id)\r\n\t\tdispatch({ type: DELETE, payload: id })\r\n\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\t\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst { data } = await api.likePost(id)\r\n\t\tdispatch({ type: LIKE, payload: data })\r\n\t} catch (error) {\r\n\t\tconsole.log(error)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/'\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport moment from 'moment'\r\nimport useStyles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts'\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useDispatch()\r\n\treturn (\r\n\t\t<Card className={classes.card}>\r\n\t\t\t<CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n\t\t\t<div className={classes.overlay}>\r\n\t\t\t\t<Typography variant=\"h6\">{post.author}</Typography>\r\n\t\t\t\t<Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.overlay2}>\r\n\t\t\t\t<Button \r\n\t\t\t\t\tstyle={{color: 'white'}} \r\n\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\tonClick={() => setCurrentId(post._id)}>\r\n\t\t\t\t\t<MoreHorizIcon fontSize=\"default\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.details}>\r\n\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n\t\t\t</div>\r\n\t\t\t<Typography className={classes.title} gutterButtom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography  gutterButtom variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={() => {dispatch(likePost(post._id))}}>\r\n\t\t\t\t\t<ThumbUpAltIcon FontSize=\"small\" />\r\n\t\t\t\t\t&nbsp; Like &nbsp;\r\n\t\t\t\t\t{post.likeCount}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" color=\"primary\" onClick={() => {dispatch(deletePost(post._id))}}>\r\n\t\t\t\t\t<DeleteIcon FontSize=\"small\" />\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Post","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react'\r\nimport { Grid, CircularProgress } from '@material-ui/core'\r\nimport Post from './Post/Post'\r\nimport useStyles from './styles'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n\tconst posts = useSelector((state) => state.posts)\r\n\tconst classes = useStyles()\r\n\r\n\tconsole.log(posts)\r\n\r\n\treturn (\r\n\t\t!posts.length ? <CircularProgress /> : ( \r\n\t\t\t<Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t\t<Grid key={post._id} item xs={12} sm={6} md={6}>\r\n\t\t\t\t\t\t\t<Post post={post} setCurrentId={setCurrentId} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport default Posts","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}))","import React, { useState, useEffect } from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n\tconst [postData, setPostData] = useState({\r\n\t\tauthor: '',\r\n\t\ttitle: '',\r\n\t\tmessage: '',\r\n\t\ttags: '',\r\n\t\tselectedFile: ''\r\n\t})\r\n\tconst post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null))\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tif(post) setPostData(post)\r\n\t}, [post])\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif(currentId) {\r\n\t\t\tdispatch(updatePost(currentId, postData))\r\n\t\t} else {\r\n\t\t\tdispatch(createPost(postData))\r\n\t\t}\r\n\r\n\t\tclear()\r\n\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tsetCurrentId(null)\t\r\n\t\tsetPostData({ author: '', title: '', message: '', tags: '', selectedFile: '' })\r\n\t}\r\n\r\n\treturn (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? 'Edit' : 'Jot down'} your thought</Typography>\r\n        <TextField name=\"author\" variant=\"outlined\" label=\"Author\" fullWidth value={postData.author} onChange={(e) => setPostData({ ...postData, author: e.target.value })} />\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (comma-separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Form","export default __webpack_public_path__ + \"static/media/thoughts.7173fd40.png\";","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(() => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n}))","import React, { useState, useEffect } from 'react'\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Posts from './components/Posts/Posts'\r\nimport Form from './components/Form/Form'\r\nimport { getPosts } from './actions/posts'\r\nimport thoughts from './img/thoughts.png'\r\nimport useStyles from './styles'\r\n\r\nconst App = () => {\r\n\tconst [currentId, setCurrentId] = useState(null)\r\n\tconst classes = useStyles()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getPosts())\r\n\t}, [currentId, dispatch])\r\n\r\n\treturn (\r\n\t\t<Container maxwidth=\"lg\">\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n\t\t\t\t<Typography variant=\"h2\" align=\"center\">Thoughts</Typography>\r\n\t\t\t\t<img className={classes.image} src = {thoughts} alt=\"thoughts\" height=\"60\" />\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<Grow in>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n\t\t\t\t\t\t<Grid item xs={12} sm={7}>\r\n\t\t\t\t\t\t\t<Posts setCurrentId={setCurrentId} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid item xs={12} sm={4}>\r\n\t\t\t\t\t\t\t<Form currentId={currentId} setCurrentId={setCurrentId} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Container>\r\n\t\t\t</Grow>\r\n\r\n\r\n\t\t</Container> \r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>, \r\n\tdocument.getElementById('root'))\r\n\r\n"],"sourceRoot":""}